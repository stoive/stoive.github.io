<tutorial>
<lesson number="1" title="Installing Python" author="Steven Thurlow">
    <content>
		<section title="What is python?">
			<p>If you don't understand this, don't worry. Just skip it and move on.</p>
			<p>Python is an &lt;b&gt;interpreted&lt;/b&gt; &lt;i&gt;programming language&lt;/i&gt;. For those who don't know, a programming language is what you write down to tell a computer what to do. However, the computer doesn't read the language directly - there are hundreds of programming languages, and it couldn't understand them all. So, when someone writes a program, they will write it in their language of choice, and then compile it - that is, turn it in to lots of 0s and 1s, that the computer can easily and quickly understand. A windows program that you buy is already compiled for windows - if you opened the program file up, you'd just get a mass of weird characters and rectangles. Give it a go - find a small windows program, and open it up in notepad or wordpad. See what garbled mess you get.</p>
			<p>But that windows program is compiled for windows - no other machine can run that program, unless it has windows. What Python is, is a language which is never actually compiled in full - instead, an interpreter turns each line of code into 0s and 1s that your computer can understand this. And it is done on the fly - it compiles the bits of the program you are using as you are using them. If you were to quit the program and come back another day, it would compile the bits you are using, as you are using them, again. Seems a waste of time? Maybe, but the fact is that when you come back another day, you might be using a Windows instead of a Mac. You might send the program to a friend, who uses another type of computer. Or you might post your program on the internet, where everyone using all different types of systems might download it. That is the wonder of an interpreted programming language - it is like a language that EVERYONE can understand.</p>
		</section>
		<section title="So why will civIV use Python?">
			<image align="right" location="../../images/01_garble.jpg" caption="The garbled mess of a compiled program" />
			<p>Remember that garbled mess that you got when opening a program in notepad? Not much use to anyone, apart from the computer. And there is no reliable (or legal) way of turning that program back in to a programming language that you or I could understand.</p>
			<p>The same is with Civ3 AI - it is compiled into a garbled mess. Nobody can understand it, and most of all, nobody can change it. Only Firaxis can change the AI, and they can't share the logic behind it with anyone.</p>
			<p>With cIV, they decided to change that - they would leave the AI uncompiled in the language of Python, and have it compiled on-the-fly by an interpreter. This is so that Joe modder can look at the AI and change it, yet when it is neede to be used, the python interpreter turns it into 0s and 1s for your computer to understand. And it isn't permanently compiled into a garbled mess - you are still left with python code, that you can read, understand, and MODIFY!!!!!</p>
		</section>
		<section title="How to install python">
			<list state="ordered">
				<entry>First download <link dest="http://www.python.org/ftp/python/2.4.1/python-2.4.1.msi" text="Python-2.4.1.exe" /> by following this link. If you are a dialup user, keep in mind that the file is around 10MB</entry>
				<entry>Run the file you just downloaded, and follow the prompts.</entry>
			</list>
			<p>OK! Hopefully now everything is good! Now, to test if that just worked, type this in your DOS window:</p>
			<code title="Testing the installation">
				<l>python -V</l>
			</code>
			<p>If you forgot a CAPITAL V, you will accidently load python in verbose mode. Give it a go, see what happens. Just press CTRL-D to quit, or type 'quit' for quit instructions.</p>
		</section>
		<section title="conclusion">
			<p>Good work! Lesson 1 over! Next lesson, we learn our way around Python Interactive Mode, and write simple one-line pieces of code. I'll also have a lesson plan drawn up by then, so you can see where you are going. If any of our more experienced members have suggestions for the lesson plan, tell me!</p>
			<p>Thanks to all,</p>
			<p>sthurlow.com</p>
		</section>
    </content>
</lesson>
</tutorial>
